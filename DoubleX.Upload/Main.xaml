<dxui:DxWindow x:Class="DoubleX.Upload.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DoubleX.Upload"
        xmlns:dxui="http://doublex.com/doublexui"
        mc:Ignorable="d"
       Width="1120" WindowStartupLocation="CenterScreen" IsTitleVisible="False"  Title="启程网络(ACF上传工具)-客户端" 
               IsLogoVisible="True" LogoWidth="345" LogoHeight="58" >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <GroupBox  Margin="5,10,5,0" Header="服务器（FTP）">
                <StackPanel Margin="5" Orientation="Horizontal">
                    <TextBox Name="txtAddress" Text="" Tag="主机(H)：" Style="{DynamicResource Label-Text-Group}" Margin="0,0,15,0"></TextBox>
                    <TextBox Name="txtPort"  Text="21" Tag="端口(P)：" Width="120" Style="{DynamicResource Label-Text-Group}"  Margin="0,0,15,0"></TextBox>
                    <TextBox Name="txtName"  Text="" Tag="用户名(U)：" Style="{DynamicResource Label-Text-Group}"  Margin="0,0,15,0"></TextBox>
                    <TextBox Name="txtPassword" Text="" Tag="密码(P)：" Style="{DynamicResource Label-Text-Group}"  Margin="0,0,15,0"></TextBox>
                    <TextBox Name="txtDirectory" Text="/" Tag="目录(D)：" Style="{DynamicResource Label-Text-Group}"  Margin="0,0,15,0"></TextBox>
                    <Button x:Name="btnConnectOpen"  Style="{DynamicResource Button-Primary}"  Margin="0,0,15,0" Click="btnConnectOpen_Click">快速连接(Q)</Button>
                    <Button x:Name="btnConnectClose" Visibility="Collapsed"  Style="{DynamicResource Button-Info}"  Margin="0,0,15,0" Click="btnConnectClose_Click">断开连接(C)</Button>
                    <Button x:Name="btnFTPServerView"  Visibility="Collapsed"  Style="{DynamicResource Button-Primary}"  Margin="0,0,15,0" Click="btnFTPServerView_Click">目录浏览(D)</Button>
                    <Button Name="btnRegister" Visibility="Collapsed"  Margin="0,0,15,0" Click="btnRegister_Click">软件注册</Button>
                    <!-- 这里增加一个连接历史记录  -->
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="320px" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,10,5,0">
                    <TabControl x:Name="tabMain" Panel.ZIndex="0">
                        <TabItem Header="上传任务列表" Padding="0" Margin="0">
                            <DataGrid x:Name="gridTaskPathList" Margin="0" Padding="0" BorderThickness="0" 
                                      ItemsSource="{Binding}"
                                      AutoGenerateColumns="False"  ColumnWidth="*"  CanUserAddRows="False" CanUserSortColumns="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="序号" Binding="{Binding ItemIndex}" Width="50" IsReadOnly="True" />
                                    <DataGridTextColumn Header="类型" Binding="{Binding ItemTypeText}"  Width="80" IsReadOnly="True"   />
                                    <DataGridTextColumn Header="路径" Binding="{Binding ItemPath}"  IsReadOnly="True" />
                                    <DataGridTextColumn Header="数量" Binding="{Binding ItemCount}" Width="80" IsReadOnly="True" />
                                    <DataGridTemplateColumn Header="移除" Width="45" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="x" Height="18" FontSize="10" Padding="0"  Click="gridTaskPathDelete_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <TabItem Header="数据库操作" Name="tabDatabase">
                            <Grid Margin="20">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="0,0,0,10" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label  Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left">连接字符串：</Label>
                                    <TextBox Grid.Column="1" Name="txtConnectionStr" Text="Data Source=localhost;Initial Catalog=DB_Test;User Id=test;Password=123456;" Margin="0,0,0,0" Width="Auto"></TextBox>
                                    <dxui:DxButton Grid.Column="3" x:Name="btnConnectionHelper" Margin="0" IconLeft="&#xf059;" Click="btnConnectionHelper_Click"></dxui:DxButton>
                                    <Label Grid.Column="2"  VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <CheckBox Name="chkDatabaseEnabled" Content="启用" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Unchecked="chkAfterEnabled_Unchecked"></CheckBox>
                                    </Label>
                                </Grid>
                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,10">
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Left">数据库类型：</Label>
                                    <RadioButton Name="raSQLserver" GroupName="raDBType" Content="SQLServer" VerticalAlignment="Center" Margin="0,0,10,0" IsChecked="True"></RadioButton>
                                    <RadioButton Name="raMySql" GroupName="raDBType" Content="MySql" VerticalAlignment="Center"  Margin="0,0,10,0"></RadioButton>
                                    <RadioButton Name="raOracle" GroupName="raDBType" Content="Oracle" VerticalAlignment="Center"  Margin="0,0,10,0"></RadioButton>
                                    <RadioButton Name="raSQLite" GroupName="raDBType" Content="Sqlite" VerticalAlignment="Center"  Margin="0,0,10,0"></RadioButton>
                                </StackPanel>
                                <Grid Grid.Row="2" Margin="0,0,0,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label  Grid.Column="0">数据库脚本：</Label>
                                    <TextBox Grid.Column="1" Name="txtSql" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Width="Auto" Height="Auto" Margin="0,0,0,0" Padding="10" VerticalContentAlignment="Top">
                                        insert into TB_Table1(Name,Text) VALUES ('{FileFullPath}','test2')
                                    </TextBox>
                                </Grid>
                                <StackPanel Grid.Row="3" Margin="0,0,0,10" Orientation="Horizontal"  HorizontalAlignment="Right">
                                    <Button Name="btnScriptExcute" Margin="0,0,5,0" Click="btnScriptExcute_Click">测试数据库脚本</Button>
                                </StackPanel>
                                <TextBlock Grid.Row="4" VerticalAlignment="Center">
                                    * SQL语句中可用标签： {FileFullPath}->文路径径，{FileSize}->文件大小，{ServerFileFullPath}->文件在服务器路径<LineBreak/>
                                    * 标签在测试时不可用(标签区分大小写)
                                </TextBlock>
                            </Grid>
                        </TabItem>
                        <TabItem Header="上传（前）接口调用配置" Name="tabApiBefore">
                            <Grid Margin="20">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="60"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Left">接口地址：</Label>
                                    <TextBox Name="txtBeforeUrl" Text="http://localhost:8080/api/upload/before" Width="400"></TextBox>
                                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <CheckBox Name="chkBeforeEnabled" Content="启用" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Unchecked="chkBeforeEnabled_Unchecked" ></CheckBox>
                                    </Label>
                                </StackPanel>
                                <Label Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,10">发送方式：（POST）</Label>
                                <Grid Grid.Row="2" Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0">请求数据：</Label>
                                    </StackPanel>
                                    <Canvas Grid.Column="1" Panel.ZIndex="3">
                                        <StackPanel Canvas.Top="6" Canvas.Right="3"  Orientation="Horizontal">
                                            <dxui:DxButton x:Name="btnPostBeforeAdd" Margin="0" IconLeft="&#xf055;" Click="btnPostBeforeAdd_Click">增加参数</dxui:DxButton>
                                        </StackPanel>
                                    </Canvas>
                                </Grid>
                                <DataGrid Grid.Row="3" x:Name="gridRequestBefore" Style="{StaticResource Table-Info}"  Margin="0" Padding="0" BorderThickness="1" 
                                          ItemsSource="{Binding}"
                                          AutoGenerateColumns="False"  ColumnWidth="*" CanUserAddRows="False" CanUserSortColumns="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                          CellEditEnding="gridRequestBefore_CellEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="参数" Binding="{Binding Name}" Width="130"    />
                                        <DataGridTextColumn Header="类型" Binding="{Binding PType}" Width="120" />
                                        <DataGridTextColumn Header="描述" Binding="{Binding Descript}" />
                                        <DataGridTextColumn Header="默认值" Binding="{Binding DefaultValue}" />
                                        <DataGridTemplateColumn Header="移除" Width="45" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="x" Height="18" FontSize="10" Padding="0"  Click="gridRequestBeforeDelete_Click" Visibility="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(FrameworkElement.DataContext).IsCanDelete, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Grid.Row="4" VerticalAlignment="Center">
                                    * 增加参数，类型为Value的字符串默认值<LineBreak/>
                                    * 上传文件前，将待上传文件（上述参数信息）以HTTP(POST)方式，请求发送至服务器接口。<LineBreak/>
                                    * 接收接口返回结果保存，格式为：错误 false 字符串，正确 (JSON)对象字符串，并保存，可在上传后接口中根据JSON KEY 调用。
                                </TextBlock>
                            </Grid>
                        </TabItem>
                        <TabItem Header="上传（后）接口调用配置" Name="tabApiAfter">
                            <Grid Margin="20">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="60"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Left">接口地址：</Label>
                                    <TextBox Name="txtAfterUrl" Text="http://localhost:8080/api/upload/after" Width="400"></TextBox>
                                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <CheckBox Name="chkAfterEnabled" Content="启用" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Unchecked="chkAfterEnabled_Unchecked"></CheckBox>
                                    </Label>
                                </StackPanel>
                                <Label Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,10">发送方式：（POST）</Label>
                                <Grid Grid.Row="2" Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0">请求数据：</Label>
                                    </StackPanel>
                                    <Canvas Grid.Column="1" Panel.ZIndex="3">
                                        <StackPanel Canvas.Top="6" Canvas.Right="3"  Orientation="Horizontal">
                                            <dxui:DxButton x:Name="btnPostAfterAdd" Margin="0" IconLeft="&#xf055;" Click="btnPostAfterAdd_Click">增加参数</dxui:DxButton>
                                        </StackPanel>
                                    </Canvas>
                                </Grid>
                                <DataGrid Grid.Row="3" x:Name="gridRequestAfter" Style="{StaticResource Table-Info}" Margin="0" Padding="0" BorderThickness="1" 
                                          ItemsSource="{Binding}"
                                          AutoGenerateColumns="False"  ColumnWidth="*" CanUserAddRows="False" CanUserSortColumns="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                          CellEditEnding="gridRequestAfter_CellEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="参数" Binding="{Binding Name}" Width="130"  />
                                        <DataGridTextColumn Header="类型" Binding="{Binding PType}" Width="120" />
                                        <DataGridTextColumn Header="描述" Binding="{Binding Descript}" />
                                        <DataGridTextColumn Header="默认值" Binding="{Binding DefaultValue}" />
                                        <DataGridTemplateColumn Header="移除" Width="45" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="x" Height="18" FontSize="10" Padding="0"  Click="gridRequestAfterDelete_Click" Visibility="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(FrameworkElement.DataContext).IsCanDelete, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Grid.Row="4" VerticalAlignment="Center">
                                    * 上传文件后，将上传文件（上述信息）以HTTP(POST)方式，请求发送至服务器接口。<LineBreak/>
                                    * 添加参数 类型：Return(Key为上传参数前接口返回JSON对象的Key)，Value: 固定值(字符串)
                                </TextBlock>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    <Canvas Panel.ZIndex="1">
                        <StackPanel Canvas.Top="10" Canvas.Right="10"  Orientation="Horizontal">
                            <dxui:DxButton x:Name="btnOpenFolderDialog" Margin="0" IconLeft="&#xf07b;" Click="btnOpenFolderDialog_Click">选择文件夹</dxui:DxButton>
                            <dxui:DxButton x:Name="btnOpenFileDialog" Margin="0" IconLeft="&#xf016;" Click="btnOpenFileDialog_Click">选择文件</dxui:DxButton>
                        </StackPanel>
                    </Canvas>
                </Grid>
                <Grid Grid.Row="1" Margin="5,10,5,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock>当前状态：</TextBlock>
                        <TextBlock x:Name="tbStatus">未有任务运行....</TextBlock>
                    </StackPanel>
                    <Label Grid.Column="1"  VerticalAlignment="Center" VerticalContentAlignment="Center">
                        <CheckBox Name="chkIsErrorGoOn" Content="遇错继续" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"></CheckBox>
                    </Label>
                    <Button x:Name="btnTaskRunning" Grid.Column="2" Margin="0,0,2,0" Click="btnTaskRunning_Click">开始任务</Button>
                    <Button x:Name="btnTaskStop" Grid.Column="2" Margin="0,0,2,0" Click="btnTaskStop_Click" Visibility="Collapsed">结束任务</Button>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="180"></RowDefinition>
                </Grid.RowDefinitions>
                <ContentControl  Grid.Row="0" Style="{StaticResource Panel-Default}" Margin="0,10,5,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" Style="{StaticResource Panel-Default-Header}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="&#xf03a;" Margin="5,1,5,0" Style="{StaticResource FontAwesome}" Foreground="{StaticResource MainColorBrush2}"></TextBlock>
                                <TextBlock Foreground="{StaticResource MainColorBrush2}">操作记录</TextBlock>
                            </StackPanel>
                        </ContentControl>
                        <ContentControl Grid.Row="1" Style="{StaticResource Panel-Body}">
                            <DataGrid x:Name="gridTaskList" Margin="0" Padding="0" BorderThickness="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                      ItemsSource="{Binding}" AutoGenerateColumns="False"  ColumnWidth="*" CanUserAddRows="False" CanUserSortColumns="False" ScrollViewer.VerticalScrollBarVisibility="Visible"
                                      MouseDoubleClick="gridTaskList_MouseDoubleClick">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="日期" Binding="{Binding CreateDt,StringFormat='{}{0:yyyy-MM-dd HH:mm}'}" IsReadOnly="True" />
                                    <DataGridTextColumn Header="总数" Binding="{Binding FileTotal}"  Width="50"  IsReadOnly="True" />
                                    <DataGridTextColumn Header="错误" Binding="{Binding ErrorTotal}"  Width="50" IsReadOnly="True" />
                                    <DataGridTextColumn Header="成功" Binding="{Binding SuccessTotal}" Width="50" IsReadOnly="True" />
                                    <DataGridTextColumn Header="状态" Binding="{Binding StatusText}"  Width="50" IsReadOnly="True" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </ContentControl>
                    </Grid>
                </ContentControl>
                <UniformGrid Grid.Row="1" Margin="0,5,5,0" Rows="1" Columns="2">
                    <Button x:Name="btnClearTask" Margin="2,0" Click="btnClearTask_Click">清空记录</Button>
                    <Button x:Name="btnClearLog" Margin="2,0" Click="btnClearLog_Click">清空日志</Button>
                </UniformGrid>
                <ContentControl  Grid.Row="2" Style="{StaticResource Panel-Default}" Margin="0,5,5,10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" Style="{StaticResource Panel-Default-Header}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="&#xf03a;" Margin="5,1,5,0" Style="{StaticResource FontAwesome}" Foreground="{StaticResource MainColorBrush2}"></TextBlock>
                                <TextBlock Foreground="{StaticResource MainColorBrush2}">操作日志</TextBlock>
                            </StackPanel>
                        </ContentControl>
                        <ContentControl Grid.Row="1" Style="{StaticResource Panel-Body}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <ScrollViewer.Content>
                                    <StackPanel x:Name="spLoggin" Orientation="Vertical" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="5"></StackPanel>
                                </ScrollViewer.Content>
                            </ScrollViewer>
                        </ContentControl>
                    </Grid>
                </ContentControl>
            </Grid>
        </Grid>
    </Grid>
</dxui:DxWindow>
